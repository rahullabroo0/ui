{"version":3,"sources":["components/login.component.js","components/signup.component.js","components/page.js","components/mytable.js","App.js","serviceWorker.js","index.js"],"names":["Login","className","type","placeholder","id","htmlFor","href","Component","SignUp","Page","style","display","padding","Box","alignItems","p","m","bgcolor","sx","height","Button","variant","color","onClick","alert","to","console","log","Pagination","count","createData","option","rows","MyTable","map","row","key","React","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a3e4c11.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Login extends Component {\n    render() {\n        return (\n            <form>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"L\">password?</a>\n                </p>\n            </form>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class SignUp extends Component {\n    render() {\n        return (\n            <form>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"S\">sign in?</a>\n                </p>\n            </form>\n        );\n    }\n}","import React from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"../index.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import MyTable from './mytable';\r\n\r\n  \r\nexport default function Page() {\r\n  return (\r\n    <div style={{ display: 'block', padding: 30 }} >\r\n      <h4>How to use Pagination Component in ReactJS?</h4>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n        sx={{ height: 100 }}\r\n      >\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Username\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n        Email\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Login Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Logout Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { alert('clicked') }}>\r\n            View Details\r\n          </Button>\r\n          <Link to={\"MyTable\"}>view</Link>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n        sx={{ height: 100 }}\r\n      >\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Username\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n        Email\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Login Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Logout Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"\">\r\n          <Button variant=\"contained\" color=\"primary\" >\r\n            View Details\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n        sx={{ height: 100 }}\r\n      >\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Username\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n        Email\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Login Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Logout Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"\">\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            View Details\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        p={1}\r\n        m={1}\r\n        bgcolor=\"background.paper\"\r\n        sx={{ height: 100 }}\r\n      >\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Username\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n        Email\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Login Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"grey.300\">\r\n          Logout Time\r\n        </Box>\r\n        <Box p={1} bgcolor=\"\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => { console.log('onClick'); }}>\r\n            View Details\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <Pagination count={10} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nlet id = 0;\r\nfunction createData(option, type) {\r\n  id += 1;\r\n  return { id, option, type };\r\n}\r\n\r\nlet rows = [\r\n  createData('Setting One', 'Private'),\r\n  createData('Setting Two', 'Public'),\r\n  createData('Setting Three', 'Group'),\r\n  createData('Setting Four', 'Private'),\r\n];\r\n\r\nexport default class MyTable extends React.Component {\r\n\r\n\r\n  render() {\r\n    return(\r\n      <table>\r\n      {rows.map(row => (\r\n        <tr key={row.id}>\r\n          <td>{row.option}</td>\r\n          <td>{row.type}</td>\r\n        </tr>\r\n      ))}\r\n      </table>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './index.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport Page from \"./components/page\";\nimport MyTable from './components/mytable';\n\nfunction App() {\n  return (<Router>\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to={\"/sign-in\"}>Rahul Labroo</Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/page\"}>Pagination</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/mytable\"}>MyTable</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route path=\"/sign-in\" component={Login} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <div className=\"page\">\n            <Route path=\"/page\" component={Page} className=\"page\"/>\n            </div>\n            <Route path=\"/mytable\" component={MyTable} />\n          </Switch>\n        </div>\n      </div>\n    </div></Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}